name: WebApp Demo
on:
  push:
    branches:
      - 'main'
      - 'dev'

env:
  IMAGE_NAME_main: mbwebapp-main
  IMAGE_NAME_dev: mbwebapp-dev

jobs:
  build-main:
    name: Build-main
    runs-on: [ubuntu-latest]
    if: github.ref_name == 'main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the Python version you need

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME_main }} .

      - name: Run Docker Container
        run: docker run -d --name ${{ env.IMAGE_NAME_main }} -p 80:80 ${{ env.IMAGE_NAME_main }}

      - name: Set script permissions
        run: chmod +x ./automatic-test/test.sh

      - name: Run tests
        run: ./automatic-test/test.sh
       
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./automatic-test/requeriments.txt

      - name: Run Python script for testing images
        run: python ./automatic-test/test-image.py  

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v2
        
      - name: Login into registry
        if: success() # This ensures login only occurs if tests pass
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_ACR_ENDPOINT }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
      
      - name: Build & Push
        if: success() # This ensures build and push only occur if login is successful
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_main }}:${{ github.sha }}
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_main }}:latest

  build-dev:
    name: Build-dev
    runs-on: [ubuntu-latest]
    if: github.ref_name == 'dev'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the Python version you need

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME_dev }} .

      - name: Run Docker Container
        run: docker run -d --name ${{ env.IMAGE_NAME_dev }} -p 80:80 ${{ env.IMAGE_NAME_dev }}
  
      - name: Set script permissions
        run: chmod +x ./automatic-test/test.sh

      - name: Run tests
        run: ./automatic-test/test.sh
              
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./automatic-test/requeriments.txt

      - name: Run Python script for testing images
        run: python ./automatic-test/test-image.py  

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v2
        
      - name: Login into registry
        if: success() # This ensures login only occurs if tests pass
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_ACR_ENDPOINT }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
      
      - name: Build & Push
        if: success() # This ensures build and push only occur if login is successful
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_dev }}:${{ github.sha }}
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_dev }}:latest